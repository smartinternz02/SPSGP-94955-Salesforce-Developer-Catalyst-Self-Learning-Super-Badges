Class:
Name: ParkLocator
public class ParkLocator {
    public static List<String> country(String country){
    ParkService.ParksImplPort prkSvc = new ParkService.ParksImplPort();
     return prkSvc.byCountry(country);  
        
    }

}

Mock class called ParkServiceMock
@isTest
global class ParkServiceMock implements WebServiceMock {
 global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
     String responseType) {
         parkService.byCountryResponse response_x = new parkService.byCountryResponse();
         response_x.return_x = new List<String>{'x','y','z'};
         response.put('response_x',response_x);
         
     }
}

Test class:
Name: ParkLocatorTest
@isTest
private class ParkLocatorTest {
    @isTest static void testCallout() {              
        // This causes a fake response to be generated
        Test.setMock(WebServiceMock.class, new ParkServiceMock());  
        String country = 'Japan';
       List<String> expected =new List<String>{'x','y','z'};
          
           System.assertEquals(expected, ParkLocator.country(country));
    }}
